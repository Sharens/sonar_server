name: SonarCloud

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better Git history analysis

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and test
      run: |
        # Install Go dependencies
        cd server
        go mod download
        
        # Run Go tests with coverage
        go test -v -coverprofile=coverage.out ./...
        
        # Generate test report in JUnit format
        mkdir -p test-results
        go test -v -json ./... > test-results/test-report.json
        
        # Back to root
        cd ..
        
        # Run client tests with coverage
        npm test -- --coverage --watchAll=false

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically generated by GitHub
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Must be set in GitHub repository settings
      with:
        args: >
          -Dsonar.organization=your-org-name
          -Dsonar.projectKey=sonar_server
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.go.coverage.reportPaths=server/coverage.out
          -Dsonar.go.tests.reportPaths=server/test-results/test-report.json
